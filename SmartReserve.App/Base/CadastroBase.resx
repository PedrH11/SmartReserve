<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA8gYAAAJNU0Z0AUkBTAIBAQMB
        AAEoAQABKAEAARABAAEQAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABQAMAARADAAEBAQABIAYAARBW
        AAM6AekDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/A04BmQwAA0IBdAMFAf4D
        AAH/Ax0BKIQAAwgBCgNVAbEDDgESAxYBHgNUAcoDJQE3GAADJwE6FAADNQFWAzoB6wMWAR4IAANVAcAM
        AAM/AeQDFQEdBwAB/wMdASiAAANGAX0DNwFaAzoBYgNEAXgDKAE8AzsBYwNAAW8DHQEpEAADHgEqGAAD
        OQFeAzkBXgMAAf8EAANUAa8TAAH/AxIBGAcAAf8DHQEodAADPwFsBAADTAGOAxQBGwNMAZADDgESA1UB
        vgMwAUoDDwETAxIBGBAAAx4BKhsAAf8DMwFSBwAB/wNUAa8XAAH/AxIBGAcAAf8DHQEobAADAwEEA0MB
        dgM0AVQDOAFcA1QBtQMkATUDVgG9AyQBNANGAX4DRgGAA1EBoQMYASAMAAMeASoDGAH5A0gBhANRAaED
        AAH/AwAB/wMKAf0DJAE0A0oBiQsAAf8bAAH/AxMBGQcAAf8DHQEoaAADGwEmAzsBZQNNAZIDJgE5AyYB
        8wMoATsDSgGKAzoBYQMwAUoDCQELAxUBHQNIAYQMAAMeASoDJgHzBAADUQGhA1EBoANRAaYDUQGmAz8B
        bAMkATQDSgGJCwAB/xsAAf8DEwEZBwAB/wMaAfgDAAH/AwAB/wMAAf8DAAH/A1UBtFAAAxsBJQM9AWkD
        SgGKAywBQwNJAd4DIAEuAxgBIANOAZQDAgEDA0YBfwQAA0YBfwwAAx4BKgMiATEDIgExAwUBBhQAAyQB
        NANKAYkLAAH/GwAB/wMTARkDAAH/Ax4BKhAAA1EBoAMAAf9QAANEAXoDEgEYA0YBgQMSARcDTgHXAzoB
        6gNGAX8DDwEUA0oBiwMhATADQAFwDAADHgEqAysB8QMrAfEDPQFpGAADJAE0A0oBiQNOAZgDHwEsAwAB
        /xsAAf8DBgEHGAADTAGOA1MBzkwAA0QBegMQARUDPQFoA0QBeQMpAT0DLAFDAz4BagNUAbIDKgFAA1MB
        zQMaASQMAAMeASoDJgHzBAADUQGhHAADVAGvA08BmwcAAf8UAAQCAwoB/CMAAf9IAANRAaQDGwElA1EB
        0gMSARgDFQEcA0oBiQNVAcADNgFZBAADVAGzAyMBMgMrAUIMAAMeASoDAAH/AwAB/wNRAaADUQGmA1QB
        rANUAawDQQFyDAADVAGvAwoBDQNRAaAYAANNAZIDLgFIIAADDwH7SAADIwEzA0YBfQMSARgDOQFfAz0B
        aQM+AWoDPwFsA00BkgNUAa8DNgFXAzoBYAM9AWcMAAMeASooAANUAa8gAANVAbEDGgEkIAADSQHdTAAD
        GQEjA0wB2wMtAUUEAAMQARUDHgErAwIBAwMTARoDUgGnAysBQRAAAx4BKgMcAfcDOQFeA1EBoQMAAf8D
        AAH/Aw8B+wgAA0YBgQNRAaMDQwHiIAADKwFBA1QBqyMAAf9MAAMEAQUDKwFCAzkBXwNIAYQDRgGAA0YB
        gANHAYMDQgF0AysBQgMKAQ0QAAMeASoDJgHzBAADUQGhA1UBxQNUAcoDVAHKA0wBjgNJAd4EAAMwAUwD
        PQFpJwAB/wQAA1UBwgMUAfoEAQMPARMDAAH/AyQBNQcAAf9MAAMLAQ4DUwHLA1UBvwMmATgDEQEWAw4B
        EgM3AVoDUAGfA04B1gMUARsQAAMeASoDCwEOAwsBDhcAAf8DMAFMAz0BaSgAAz0BaQMKAfwEAAMSARgD
        QQHmA1EB0QQBBwAB/wQBVAADJwE6Az8BbQNGAX8DRgGAA0IBdQMxAU4DDAEPFwAB/wMdASkDHQEpAx0B
        KQMdASkDHQEpAx0BKQMdASkDAAH/Az0BZzAAA0QBeAMAAf8DRAF7BAAEAQNVAbwDAAH/AwsBDugAA0IB
        dAMrAfEDRwHgAyoBQEwAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEBBQABgBcAA/8BAAL/AYAB
        BwEPAf8CAAH4AR8BvgE3AScB/wIAAfgBBwG/ARcBkwH/AgAB6AEHAb8BJwHJAf8CAAHAAQMBgAE3AeQB
        /wIAAcABAwGQARsB8gEDAgABwAELAYcBzQH4AXkCAAHgAQMBhwHgAvwCAAHgAQMBlwHyAfkB/gIAAcAB
        IwGAAXEB+QH+AgABwAEDAb8B9wH5Af4CAAHiAQcBgAHHAfkB/gIAAeABBwGQAScB/QECAgAB4AEHAo8B
        /AGEAgAB+AEPAYABHwH+ASECAAX/AYcCAAs=
</value>
  </data>
</root>